import { previewImage } from "/js/image_preview.js";

/* ========== H√ÄM HI·ªÇN TH·ªä / ·∫®N LOADING ========== */
const setVisible = (selector, visible) => {
    const el = typeof selector === "string" ? document.querySelector(selector) : selector;
    if (el) el.style.display = visible ? "block" : "none";
};

/* ========== X·ª¨ L√ù N√öT XEM CHI TI·∫æT S·∫¢N PH·∫®M ========== */
document.addEventListener("DOMContentLoaded", () => {
    const detailButtons = document.querySelectorAll(".detail");

    if (detailButtons.length === 0) {
        console.warn("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y n√∫t .detail n√†o trong trang.");
        return;
    }

    detailButtons.forEach(button => {
        button.addEventListener("click", async () => {
            const id = button.getAttribute("data-id");
            if (!id) {
                alert("Kh√¥ng x√°c ƒë·ªãnh ƒë∆∞·ª£c s·∫£n ph·∫©m c·∫ßn xem chi ti·∫øt!");
                return;
            }

            setVisible("#loading", true);

            try {
                const response = await fetch(`/product/data/${id}`);
                if (!response.ok) throw new Error(`L·ªói HTTP ${response.status}`);

                const product = await response.json();
                if (!product || !product.product_name) throw new Error("D·ªØ li·ªáu s·∫£n ph·∫©m kh√¥ng h·ª£p l·ªá!");
                console.log("üì¶ D·ªØ li·ªáu s·∫£n ph·∫©m tr·∫£ v·ªÅ:", product);

                // Ki·ªÉm tra modal c√≥ t·ªìn t·∫°i kh√¥ng
                const modalElement = document.getElementById("productDetailModal");
                if (!modalElement) {
                    alert("Kh√¥ng t√¨m th·∫•y modal #productDetailModal trong HTML!");
                    console.error("‚ùå Thi·∫øu ph·∫ßn modal hi·ªÉn th·ªã chi ti·∫øt s·∫£n ph·∫©m.");
                    return;
                }

                // C·∫≠p nh·∫≠t n·ªôi dung modal
                const elName = document.querySelector("#detailProductName");
                const elPrice = document.querySelector("#detailProductPrice");
                const elStock = document.querySelector("#detailProductStock");
                const elDesc = document.querySelector("#detailProductDescription");
                const elSpecs = document.querySelector("#detailProductSpecs");
                const elImage = document.querySelector("#detailProductImage");

                if (!elName || !elPrice || !elStock || !elDesc || !elImage) {
                    console.error("‚ùå M·ªôt ho·∫∑c nhi·ªÅu ph·∫ßn t·ª≠ trong modal b·ªã thi·∫øu.");
                    alert("Kh√¥ng th·ªÉ hi·ªÉn th·ªã chi ti·∫øt v√¨ modal ch∆∞a ƒë∆∞·ª£c c·∫•u h√¨nh ƒë√∫ng!");
                    return;
                }

                // G√°n d·ªØ li·ªáu v√†o modal
                elName.textContent = product.product_name;

                const finalPrice = ((100 - product.discount) / 100) * product.price;
                elPrice.innerHTML = product.discount > 0
                    ? `<strong>${finalPrice.toLocaleString("vi-VN")} VNƒê</strong><br>
                       <small>Gi√° g·ªëc: <s>${product.price.toLocaleString("vi-VN")} VNƒê</s> (-${product.discount}%)</small>`
                    : `<strong>${product.price.toLocaleString("vi-VN")} VNƒê</strong>`;

                elStock.textContent = `C√≤n l·∫°i: ${product.stock}`;
                elDesc.textContent = product.description || "Kh√¥ng c√≥ m√¥ t·∫£.";
/* ================== HI·ªÇN TH·ªä TH√îNG S·ªê K·ª∏ THU·∫¨T ================== */
if (elSpecs) {
    elSpecs.innerHTML = ""; // X√≥a d·ªØ li·ªáu c≈©
    const specsText = product.orientation || "Kh√¥ng c√≥ th√¥ng s·ªë k·ªπ thu·∫≠t.";

    // T√°ch c√°c d√≤ng theo xu·ªëng d√≤ng ho·∫∑c d·∫•u ch·∫•m ph·∫©y
    const lines = specsText.split(/\r?\n|;/).filter(line => line.trim() !== "");

    if (lines.length > 0) {
        lines.forEach(line => {
            // T√°ch key/value ch·ªâ theo d·∫•u ":" ho·∫∑c "-" ƒë·∫ßu ti√™n
            const match = line.match(/^(.+?)([:\-‚Äì])(.+)$/);
            if (match) {
                const key = match[1].trim();
                const value = match[3].trim();
                elSpecs.innerHTML += `
                    <tr>
                        <th class="bg-light fw-semibold" style="width:40%;">${key}</th>
                        <td>${value}</td>
                    </tr>`;
            } else {
                // N·∫øu d√≤ng kh√¥ng c√≥ d·∫•u ph√¢n t√°ch th√¨ hi·ªÉn th·ªã nguy√™n d√≤ng
                elSpecs.innerHTML += `
                    <tr>
                        <td colspan="2" class="text-secondary">${line.trim()}</td>
                    </tr>`;
            }
        });
    } else {
        elSpecs.innerHTML = `<tr><td colspan="2" class="text-center text-muted">Kh√¥ng c√≥ d·ªØ li·ªáu</td></tr>`;
    }
}



                // Fix l·ªói ƒë∆∞·ªùng d·∫´n ·∫£nh 404
                if (product.image) {
                    let imageUrl = product.image;
                    imageUrl = imageUrl.replace("http://localhost", "http://127.0.0.1:8000");
                    elImage.src = imageUrl;
                } else {
                    elImage.src = "/images/no-image.png";
                }

                // Hi·ªÉn th·ªã modal Bootstrap 5
                const modal = new bootstrap.Modal(modalElement);
                modal.show();

            } catch (error) {
                console.error("‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu s·∫£n ph·∫©m:", error);
                alert("Kh√¥ng th·ªÉ t·∫£i chi ti·∫øt s·∫£n ph·∫©m!");
            } finally {
                setVisible("#loading", false);
            }
        });
    });
});

/* ========== XEM TR∆Ø·ªöC ·∫¢NH S·∫¢N PH·∫®M ========== */
$("#image").on("change", function () {
    previewImage({
        image: "image",
        image_preview: "image-preview",
        image_preview_alt: "Product Image",
    });
});

/* ========== N√öT L∆ØU THAY ƒê·ªîI S·∫¢N PH·∫®M ========== */
$("#button_edit_product").click(function (e) {
    e.preventDefault();
    Swal.fire({
        title: "B·∫°n c√≥ ch·∫Øc ch·∫Øn?",
        text: "Sau khi th·ª±c hi·ªán, d·ªØ li·ªáu s·∫£n ph·∫©m s·∫Ω ƒë∆∞·ª£c thay ƒë·ªïi.",
        icon: "warning",
        confirmButtonText: "X√°c nh·∫≠n",
        cancelButtonText: "H·ªßy",
        showCancelButton: true,
        confirmButtonColor: "#08a10b",
        cancelButtonColor: "#d33",
        timer: 10000,
    }).then(result => {
        if (result.isConfirmed) {
            $("#form_edit_product").submit();
        } else {
            Swal.fire("H√†nh ƒë·ªông ƒë√£ b·ªã h·ªßy", "", "info");
        }
    });
});

/* ========== N√öT X√ìA S·∫¢N PH·∫®M ========== */
$("form[action*='delete_product'] button[type='submit']").click(function (e) {
    e.preventDefault();
    Swal.fire({
        title: "B·∫°n c√≥ ch·∫Øc ch·∫Øn?",
        text: "Sau khi th·ª±c hi·ªán, s·∫£n ph·∫©m s·∫Ω b·ªã x√≥a.",
        icon: "warning",
        confirmButtonText: "X√°c nh·∫≠n",
        cancelButtonText: "H·ªßy",
        showCancelButton: true,
        confirmButtonColor: "#08a10b",
        cancelButtonColor: "#d33",
        timer: 10000,
    }).then(result => {
        if (result.isConfirmed) {
            $(this).closest("form").submit();
        } else {
            Swal.fire("H√†nh ƒë·ªông ƒë√£ b·ªã h·ªßy", "", "info");
        }
    });
});
